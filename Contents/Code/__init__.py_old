####################################################################################################

VIDEO_PREFIX = "/video/example"

NAME = "Surf TV"

ART = 'art-default.jpg'
ICON = 'icon-default.png'

####################################################################################################

# This function is initially called by the PMS framework to initialize the plugin. This includes
# setting up the Plugin static instance along with the displayed artwork.
def Start():

    # Initialize the plugin
    Plugin.AddPrefixHandler(VIDEO_PREFIX, MainMenu, NAME, ICON, ART)
    Plugin.AddViewGroup("List", viewMode = "List", mediaType = "items")
    Plugin.AddViewGroup("InfoList", viewMode = "InfoList", mediaType = "items")

    # Setup the artwork associated with the plugin
    MediaContainer.art = R(ART)
    MediaContainer.title1 = NAME
    MediaContainer.viewGroup = "List"
    DirectoryItem.thumb = R(ICON)

# This main function will setup the displayed items.
def MainMenu():
    dir = MediaContainer(viewMode = "List", title1 = "Movies")

    # Returns the web page as an Element
    search_page = HTML.ElementFromURL("http://www.freesurfmovies.org/p/movies-liste.html")

    # The XPath query will return a list of all items which match the query.
    links = search_page.xpath("//div[@class='post-body entry-content']//div[@dir='ltr']//a")
    for link in links:
        title = link.xpath("text()")[0]
        url = link.get("href")
        dir.Append(Function(DirectoryItem(MovieDetail, title), channel = 1))

    return dir

def MovieDetail(sender, channel = None):
    # Return video content for specific live channel
    dir = MediaContainer(viewGroup = "InfoList", title2 = sender.itemTitle)
    # url = "http://www.youtube.com/v/5beWIDeFi0Y?"
    # dir.Append(WebVideoURL(
    #     url,
    #     title = sender.itemTitle,
    #     subtitle = "subtitle",
    #     summary = "summary",
    #     thumb = "http://2.bp.blogspot.com/-1WwrrBjTqeI/UZpircX3D1I/AAAAAAAAAXU/fvob3Wf6Nqw/s400/110%25+Surfing+Techniques+Volume+1.jpg"))

    video = VideoClipObject(
        title = video_title,
        summary = video_summary,
        originally_available_at = video_date,
        rating = video_rating,
        url = 'http://www.youtube.com/watch?v=dQw4w9WgXcQ'
    )

    # vo = VideoClipObject(url=media_url, title=title, summary=summary, thumb=Resource.ContentsOfURLWithFallback(url=thumbs, fallback="icon-default.png"))
    # media_url = video.xpath('./l:CnetTvURL', namespaces=CNET_NAMESPACE)[0].text
    # title = video.xpath('./l:Title', namespaces=CNET_NAMESPACE)[0].text
    # summary = video.xpath('./l:Description', namespaces=CNET_NAMESPACE)[0].text
    # images = video.xpath('./l:Images/l:Image', namespaces=CNET_NAMESPACE)
    # thumbs = SortImages(images)
    # duration = int(video.xpath('./l:LengthSecs', namespaces=CNET_NAMESPACE)[0].text)*1000
    # subtitle = "sub"
    return dir